'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Component = function () {
    function Component(props, children) {
        var _this = this;

        var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

        var _ref$context = _ref.context;
        var context = _ref$context === undefined ? {} : _ref$context;
        var _ref$watchStores = _ref.watchStores;
        var watchStores = _ref$watchStores === undefined ? [] : _ref$watchStores;

        _classCallCheck(this, Component);

        this.props = Object.assign({}, props, {
            children: children
        });

        this.state = {};

        if (watchStores.length && this.handleStoresChange) {
            this.handleStoresChange(context.state);
            watchStores.forEach(function (storeName) {
                return context.on(storeName, _this.handleStoresChange);
            });
        }
    }

    _createClass(Component, [{
        key: 'setState',
        value: function setState(changes) {
            Object.assign(this.state, changes);
        }
    }, {
        key: 'render',
        value: function render() {
            throw new Error('Default render is not implement');
        }
    }]);

    return Component;
}();

exports.default = Component;